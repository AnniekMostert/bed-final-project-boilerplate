{
	"info": {
		"_postman_id": "86c729c8-4405-46a4-9f80-0d4b75ad1e02",
		"name": "Bookings API",
		"description": "RESTful API for an online booking app using Express.js and Prisma",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "17255397-86c729c8-4405-46a4-9f80-0d4b75ad1e02"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "{userId}",
					"item": [
						{
							"name": "Get user by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e0d0839-8c1b-4ec8-a104-ce97ce8ad650",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Id should be a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "874a6f16-c6f3-4f6d-9b6b-c449d56c0e37",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "1b93174b-76e4-44dd-ad2c-325e1c3eb3f4",
									"name": "Successful retrieval of user",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"username\": \"jdoe\",\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"phoneNumber\": \"123-456-7890\",\n  \"profilePicture\": \"https://example.com/images/johndoe.jpg\"\n}"
								},
								{
									"id": "1b5a3fbb-2d17-43d9-939c-66f396af0cdf",
									"name": "User not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update user by ID",
							"id": "67d64267-bab5-43e8-b838-db1c9a3de5bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"jdoe_updated\",\n  \"name\": \"John Doe Updated\",\n  \"email\": \"updatedjohndoe@example.com\",\n  \"phoneNumber\": \"987-654-3210\",\n  \"profilePicture\": \"https://updated-example.com/images/johndoe.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "48b07dbf-4e6d-4a59-ba74-a9c0bd721d5f",
									"name": "User updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"jdoe_updated\",\n  \"name\": \"John Doe Updated\",\n  \"email\": \"updatedjohndoe@example.com\",\n  \"phoneNumber\": \"987-654-3210\",\n  \"profilePicture\": \"https://updated-example.com/images/johndoe.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "78fe2e30-3bcb-40cb-aa7a-cd72dcc159b1",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"jdoe_updated\",\n  \"name\": \"John Doe Updated\",\n  \"email\": \"updatedjohndoe@example.com\",\n  \"phoneNumber\": \"987-654-3210\",\n  \"profilePicture\": \"https://updated-example.com/images/johndoe.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "0782dc1f-3241-4e79-b670-1b67ba27ad22",
									"name": "User not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"jdoe_updated\",\n  \"name\": \"John Doe Updated\",\n  \"email\": \"updatedjohndoe@example.com\",\n  \"phoneNumber\": \"987-654-3210\",\n  \"profilePicture\": \"https://updated-example.com/images/johndoe.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete user by ID",
							"id": "e054fd07-0a8e-4690-a31e-b36513648cf2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "b4908e13-43aa-424d-b586-1f3aa8865109",
									"name": "User deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "4268ba1d-2f21-413b-95ae-e9c1ac884f0d",
									"name": "User not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "c8c097b8-358b-4996-a8aa-a556df9dee9c"
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6829d4a3-7b66-41d6-9e69-169bb8cee7d9",
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "73ae558e-b932-4c75-a27a-a3994c1d2d0f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"id": "c1c1093f-e00a-4ded-a8fc-b3891efed0dc",
							"name": "Successful retrieval of users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n    \"username\": \"jdoe\",\n    \"name\": \"John Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"phoneNumber\": \"123-456-7890\",\n    \"profilePicture\": \"https://example.com/images/johndoe.jpg\"\n  },\n  {\n    \"id\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n    \"username\": \"jdoe\",\n    \"name\": \"John Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"phoneNumber\": \"123-456-7890\",\n    \"profilePicture\": \"https://example.com/images/johndoe.jpg\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new user",
					"id": "3cc4fdcd-ea60-4ee0-855f-a5ee875245a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"jdoe\",\n  \"password\": \"password123\",\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"phoneNumber\": \"123-456-7890\",\n  \"profilePicture\": \"https://global-uploads.webflow.com/5eecfecbe625d195e35b89f2/624bfb093da7d92733c001c0_Ignacio%20Villafruela%20Rodr%C3%ADguez.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"id": "6afbc293-38ff-448d-88df-ab6f962ba1f4",
							"name": "User created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"jdoe\",\n  \"password\": \"password123\",\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"phoneNumber\": \"123-456-7890\",\n  \"profilePicture\": \"https://global-uploads.webflow.com/5eecfecbe625d195e35b89f2/624bfb093da7d92733c001c0_Ignacio%20Villafruela%20Rodr%C3%ADguez.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "3c4c768c-9b9c-4188-ac9e-7063c1f0c308",
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"jdoe\",\n  \"password\": \"password123\",\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"phoneNumber\": \"123-456-7890\",\n  \"profilePicture\": \"https://global-uploads.webflow.com/5eecfecbe625d195e35b89f2/624bfb093da7d92733c001c0_Ignacio%20Villafruela%20Rodr%C3%ADguez.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "1314a41b-421c-4c0b-bd5a-b65889122efb"
		},
		{
			"name": "hosts",
			"item": [
				{
					"name": "{hostId}",
					"item": [
						{
							"name": "Get host by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "999bc4d2-8ac1-496f-9ae4-8109c4f392ad",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"ID is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0ea8bd72-14a3-4b19-b624-67f3cfa1451d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hosts/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts",
										":hostId"
									],
									"variable": [
										{
											"key": "hostId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "08d52994-7096-4f8e-be4c-2be3fb117c7a",
									"name": "Successful retrieval of host",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hosts/:hostId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":hostId"
											],
											"variable": [
												{
													"key": "hostId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n  \"username\": \"johnDoe\",\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@email.com\",\n  \"phoneNumber\": \"+11234567890\",\n  \"profilePicture\": \"https://example.com/images/johndoe.jpg\",\n  \"aboutMe\": \"I'm a passionate traveler who loves to share my home with fellow explorers. Welcome!\"\n}"
								},
								{
									"id": "6dfead31-b1cb-478e-b3a8-323f0a436e2d",
									"name": "Host not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hosts/:hostId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":hostId"
											],
											"variable": [
												{
													"key": "hostId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update host by ID",
							"id": "869cb65d-5c08-4f67-b8e3-dd45d48fcfa5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"johnDoe_updated\",\n  \"name\": \"John Doe Updated\",\n  \"email\": \"updatedjohndoe@email.com\",\n  \"phoneNumber\": \"+11234567890\",\n  \"profilePicture\": \"https://updated-example.com/images/johndoe.jpg\",\n  \"aboutMe\": \"Updated bio for John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/hosts/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts",
										":hostId"
									],
									"variable": [
										{
											"key": "hostId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "e78fc468-e8b7-4e89-8ca9-e49909fdce0c",
									"name": "Host updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnDoe_updated\",\n  \"name\": \"John Doe Updated\",\n  \"email\": \"updatedjohndoe@email.com\",\n  \"phoneNumber\": \"+11234567890\",\n  \"profilePicture\": \"https://updated-example.com/images/johndoe.jpg\",\n  \"aboutMe\": \"Updated bio for John Doe\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/:hostId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":hostId"
											],
											"variable": [
												{
													"key": "hostId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "7a3d565e-4232-4a0a-973d-24179b5aab3a",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnDoe_updated\",\n  \"name\": \"John Doe Updated\",\n  \"email\": \"updatedjohndoe@email.com\",\n  \"phoneNumber\": \"+11234567890\",\n  \"profilePicture\": \"https://updated-example.com/images/johndoe.jpg\",\n  \"aboutMe\": \"Updated bio for John Doe\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/:hostId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":hostId"
											],
											"variable": [
												{
													"key": "hostId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "7aa53d4a-37e3-4691-8eca-b080fac16f40",
									"name": "Host not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnDoe_updated\",\n  \"name\": \"John Doe Updated\",\n  \"email\": \"updatedjohndoe@email.com\",\n  \"phoneNumber\": \"+11234567890\",\n  \"profilePicture\": \"https://updated-example.com/images/johndoe.jpg\",\n  \"aboutMe\": \"Updated bio for John Doe\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/:hostId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":hostId"
											],
											"variable": [
												{
													"key": "hostId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete host by ID",
							"id": "590095a5-4936-458a-a65a-c4f1f3e57004",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hosts/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts",
										":hostId"
									],
									"variable": [
										{
											"key": "hostId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "86cb9daa-aadc-494a-ba47-6838fc837d55",
									"name": "Host deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hosts/:hostId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":hostId"
											],
											"variable": [
												{
													"key": "hostId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "62d828f0-10c3-4804-84a5-ac69d20d5b0e",
									"name": "Host not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hosts/:hostId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":hostId"
											],
											"variable": [
												{
													"key": "hostId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "fc66e638-3758-423a-a7d5-d2cb8fbeedd3"
				},
				{
					"name": "Get all hosts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bdef763b-22b8-41e9-b16e-bde375c7c14a",
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response body is an array\", function () {",
									"  pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "497dc443-ac46-45a4-9938-1d481df7db4e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hosts"
							]
						}
					},
					"response": [
						{
							"id": "7e0492f6-06a7-499b-b1c4-9924b1336dc4",
							"name": "Successful retrieval of hosts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n    \"username\": \"johnDoe\",\n    \"name\": \"John Doe\",\n    \"email\": \"johndoe@email.com\",\n    \"phoneNumber\": \"+11234567890\",\n    \"profilePicture\": \"https://example.com/images/johndoe.jpg\",\n    \"aboutMe\": \"I'm a passionate traveler who loves to share my home with fellow explorers. Welcome!\"\n  },\n  {\n    \"id\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n    \"username\": \"johnDoe\",\n    \"name\": \"John Doe\",\n    \"email\": \"johndoe@email.com\",\n    \"phoneNumber\": \"+11234567890\",\n    \"profilePicture\": \"https://example.com/images/johndoe.jpg\",\n    \"aboutMe\": \"I'm a passionate traveler who loves to share my home with fellow explorers. Welcome!\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new host",
					"id": "8472cf2e-b615-4d83-8ca7-b435b8715ba1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"johnDoe\",\n  \"password\": \"johnDoe123\",\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@email.com\",\n  \"phoneNumber\": \"+11234567890\",\n  \"profilePicture\": \"https://example.com/images/johndoe.jpg\",\n  \"aboutMe\": \"I'm a passionate traveler who loves to share my home with fellow explorers. Welcome!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hosts"
							]
						}
					},
					"response": [
						{
							"id": "d843b97c-ca88-4737-bf67-a0a62f5468c0",
							"name": "Host created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"johnDoe\",\n  \"password\": \"johnDoe123\",\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@email.com\",\n  \"phoneNumber\": \"+11234567890\",\n  \"profilePicture\": \"https://example.com/images/johndoe.jpg\",\n  \"aboutMe\": \"I'm a passionate traveler who loves to share my home with fellow explorers. Welcome!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "955d362a-dec8-41b2-b28b-e077b2cdd62c",
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"johnDoe\",\n  \"password\": \"johnDoe123\",\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@email.com\",\n  \"phoneNumber\": \"+11234567890\",\n  \"profilePicture\": \"https://example.com/images/johndoe.jpg\",\n  \"aboutMe\": \"I'm a passionate traveler who loves to share my home with fellow explorers. Welcome!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "cc164486-f538-479c-b735-0981aafc5559"
		},
		{
			"name": "properties",
			"item": [
				{
					"name": "{propertyId}",
					"item": [
						{
							"name": "Get property by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "565f53de-b741-4d2c-a499-9e2de2a5d2ac",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Id should be a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.id).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"pricePerNight is a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.pricePerNight).to.be.a('number').and.to.be.at.least(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "63ec15ef-ecb8-45da-84c5-93f3c4ba8476",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/properties/:propertyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"properties",
										":propertyId"
									],
									"variable": [
										{
											"key": "propertyId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "f850b55e-d857-4faa-a80e-666a27d18b09",
									"name": "Successful retrieval of property",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/properties/:propertyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"properties",
												":propertyId"
											],
											"variable": [
												{
													"key": "propertyId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"g9012345-67ef-0123-4567-89abcdef0123\",\n  \"title\": \"Cozy Mountain Retreat\",\n  \"description\": \"Experience tranquility in our cozy cabin situated on a serene mountain peak.\",\n  \"location\": \"Rocky Mountains, Colorado\",\n  \"pricePerNight\": 120.5,\n  \"bedroomCount\": 3,\n  \"bathRoomCount\": 2,\n  \"maxGuestCount\": 5,\n  \"hostId\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n  \"rating\": 5\n}"
								},
								{
									"id": "7f5cdf27-76e3-42d1-be1a-80991719a9fd",
									"name": "Property not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/properties/:propertyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"properties",
												":propertyId"
											],
											"variable": [
												{
													"key": "propertyId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update property by ID",
							"id": "056f1d22-581d-4cab-88e4-d607e07db6b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated Cozy Mountain Retreat\",\n  \"description\": \"Updated description for the cozy mountain retreat.\",\n  \"location\": \"Updated Location\",\n  \"pricePerNight\": 150.5,\n  \"bedroomCount\": 4,\n  \"bathRoomCount\": 3,\n  \"maxGuestCount\": 6,\n  \"rating\": 4.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/properties/:propertyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"properties",
										":propertyId"
									],
									"variable": [
										{
											"key": "propertyId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "48c4aafa-dc4f-413c-9882-aca5df1a6a16",
									"name": "Property updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"Updated Cozy Mountain Retreat\",\n  \"description\": \"Updated description for the cozy mountain retreat.\",\n  \"location\": \"Updated Location\",\n  \"pricePerNight\": 150.5,\n  \"bedroomCount\": 4,\n  \"bathRoomCount\": 3,\n  \"maxGuestCount\": 6,\n  \"rating\": 4.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/properties/:propertyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"properties",
												":propertyId"
											],
											"variable": [
												{
													"key": "propertyId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "276a73eb-f2ae-4a74-8f4e-2a6dd87b7654",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"Updated Cozy Mountain Retreat\",\n  \"description\": \"Updated description for the cozy mountain retreat.\",\n  \"location\": \"Updated Location\",\n  \"pricePerNight\": 150.5,\n  \"bedroomCount\": 4,\n  \"bathRoomCount\": 3,\n  \"maxGuestCount\": 6,\n  \"rating\": 4.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/properties/:propertyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"properties",
												":propertyId"
											],
											"variable": [
												{
													"key": "propertyId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "56031d50-f7d8-4865-92f8-291695f224cd",
									"name": "Property not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"Updated Cozy Mountain Retreat\",\n  \"description\": \"Updated description for the cozy mountain retreat.\",\n  \"location\": \"Updated Location\",\n  \"pricePerNight\": 150.5,\n  \"bedroomCount\": 4,\n  \"bathRoomCount\": 3,\n  \"maxGuestCount\": 6,\n  \"rating\": 4.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/properties/:propertyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"properties",
												":propertyId"
											],
											"variable": [
												{
													"key": "propertyId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete property by ID",
							"id": "a58a0bde-ba09-4201-a451-55f9f73fe352",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/properties/:propertyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"properties",
										":propertyId"
									],
									"variable": [
										{
											"key": "propertyId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "575e1520-2f56-4a7d-b250-87fbd84e2316",
									"name": "Property deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/properties/:propertyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"properties",
												":propertyId"
											],
											"variable": [
												{
													"key": "propertyId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "4efa119b-9f35-4b6e-9f28-80401d71d6f7",
									"name": "Property not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/properties/:propertyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"properties",
												":propertyId"
											],
											"variable": [
												{
													"key": "propertyId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "6f179e84-d519-4acc-a3fd-36c231670046"
				},
				{
					"name": "Get all properties",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc9f34d7-cd64-4b43-8327-ca60c44005a2",
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array with at least one element\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"});",
									"",
									"",
									"pm.test(\"pricePerNight is a non-negative number\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    ",
									"    responseData.forEach(function(property) {",
									"        pm.expect(property.pricePerNight).to.be.a('number').and.to.be.at.least(0);",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"maxGuestCount is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(property) {",
									"        pm.expect(property.maxGuestCount).to.be.a('number').and.to.satisfy(function(value) {",
									"            return value >= 0;",
									"        }, \"maxGuestCount should be a non-negative integer\");",
									"    });",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "17681989-519a-4dfe-b1d2-6bd1fde455a7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties"
							]
						}
					},
					"response": [
						{
							"id": "dc9835b3-9288-4170-aebb-81cf23b99414",
							"name": "Successful retrieval of properties",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"properties"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"g9012345-67ef-0123-4567-89abcdef0123\",\n    \"title\": \"Cozy Mountain Retreat\",\n    \"description\": \"Experience tranquility in our cozy cabin situated on a serene mountain peak.\",\n    \"location\": \"Rocky Mountains, Colorado\",\n    \"pricePerNight\": 120.5,\n    \"bedroomCount\": 3,\n    \"bathRoomCount\": 2,\n    \"maxGuestCount\": 5,\n    \"hostId\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n    \"rating\": 5\n  },\n  {\n    \"id\": \"g9012345-67ef-0123-4567-89abcdef0123\",\n    \"title\": \"Cozy Mountain Retreat\",\n    \"description\": \"Experience tranquility in our cozy cabin situated on a serene mountain peak.\",\n    \"location\": \"Rocky Mountains, Colorado\",\n    \"pricePerNight\": 120.5,\n    \"bedroomCount\": 3,\n    \"bathRoomCount\": 2,\n    \"maxGuestCount\": 5,\n    \"hostId\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n    \"rating\": 5\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new property",
					"id": "b1e4db10-032c-47a7-ac34-b1e4b511bd61",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Cozy Mountain Retreat\",\n  \"description\": \"Experience tranquility in our cozy cabin situated on a serene mountain peak.\",\n  \"location\": \"Rocky Mountains, Colorado\",\n  \"pricePerNight\": 120.5,\n  \"bedroomCount\": 3,\n  \"bathRoomCount\": 2,\n  \"maxGuestCount\": 5,\n  \"hostId\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n  \"rating\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties"
							]
						}
					},
					"response": [
						{
							"id": "bc09b6ae-0e5b-4dcb-8cc0-01ac2df34987",
							"name": "Property created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Cozy Mountain Retreat\",\n  \"description\": \"Experience tranquility in our cozy cabin situated on a serene mountain peak.\",\n  \"location\": \"Rocky Mountains, Colorado\",\n  \"pricePerNight\": 120.5,\n  \"bedroomCount\": 3,\n  \"bathRoomCount\": 2,\n  \"maxGuestCount\": 5,\n  \"hostId\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n  \"rating\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"properties"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "3efad47d-f4f7-43b3-99c4-1b85084a75e5",
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Cozy Mountain Retreat\",\n  \"description\": \"Experience tranquility in our cozy cabin situated on a serene mountain peak.\",\n  \"location\": \"Rocky Mountains, Colorado\",\n  \"pricePerNight\": 120.5,\n  \"bedroomCount\": 3,\n  \"bathRoomCount\": 2,\n  \"maxGuestCount\": 5,\n  \"hostId\": \"f1234567-89ab-cdef-0123-456789abcdef\",\n  \"rating\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"properties"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "4975e3e7-a2bf-4ce5-afcb-0b4e51627b1b"
		},
		{
			"name": "amenities",
			"item": [
				{
					"name": "{amenityId}",
					"item": [
						{
							"name": "Get amenity by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69f08752-06aa-461c-bc64-5544689b95f9",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields - id and name\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.id).to.exist.and.to.be.a('string');",
											"    pm.expect(responseData.name).to.exist.and.to.be.a('string');",
											"});",
											"",
											"",
											"pm.test(\"id is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.id).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Name should be a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dbc5b2d9-8e2e-40d0-883a-79d12657749b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/amenities/:amenityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"amenities",
										":amenityId"
									],
									"variable": [
										{
											"key": "amenityId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "175210f8-b036-465e-a172-86ba0841ecb4",
									"name": "Successful retrieval of amenity",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/amenities/:amenityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"amenities",
												":amenityId"
											],
											"variable": [
												{
													"key": "amenityId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"l4567890-12gh-ijkl-1234-56789abcdef0\",\n  \"name\": \"Wifi\"\n}"
								},
								{
									"id": "874641ad-02f2-4d18-985e-bcd4f054d97f",
									"name": "Amenity not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/amenities/:amenityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"amenities",
												":amenityId"
											],
											"variable": [
												{
													"key": "amenityId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update amenity by ID",
							"id": "138d668c-d039-41fb-8581-29cb90da696e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Updated Wifi\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/amenities/:amenityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"amenities",
										":amenityId"
									],
									"variable": [
										{
											"key": "amenityId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "99c65c87-8c64-427a-a03d-361b9e347536",
									"name": "Amenity updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Updated Wifi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/amenities/:amenityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"amenities",
												":amenityId"
											],
											"variable": [
												{
													"key": "amenityId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "1b41d1a7-ca5b-456a-a818-0e70964cb657",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Updated Wifi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/amenities/:amenityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"amenities",
												":amenityId"
											],
											"variable": [
												{
													"key": "amenityId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "d9c693a3-6dc9-48aa-b565-a66bcd5272e8",
									"name": "Amenity not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Updated Wifi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/amenities/:amenityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"amenities",
												":amenityId"
											],
											"variable": [
												{
													"key": "amenityId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete amenity by ID",
							"id": "9a295228-1e51-42be-a61b-4057cb4fd634",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/amenities/:amenityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"amenities",
										":amenityId"
									],
									"variable": [
										{
											"key": "amenityId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "4fbf830d-d9ca-4717-b3d1-059571a68a90",
									"name": "Amenity deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/amenities/:amenityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"amenities",
												":amenityId"
											],
											"variable": [
												{
													"key": "amenityId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "f48b4c54-bffd-4a00-9134-64321af1e76f",
									"name": "Amenity not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/amenities/:amenityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"amenities",
												":amenityId"
											],
											"variable": [
												{
													"key": "amenityId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "a2c8dbea-fc11-43ad-9b86-9bc5b4b9378b"
				},
				{
					"name": "Get all amenities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b7fe576-7c50-4961-bcda-de9a5704936d",
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array with at least one element\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('array');",
									"  pm.expect(responseData).to.have.lengthOf.at.least(1);",
									"});",
									"",
									"",
									"pm.test(\"Each element in the response has the required fields - id and name\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    ",
									"    responseData.forEach(function(element){",
									"        pm.expect(element).to.be.an('object');",
									"        pm.expect(element.id).to.exist.and.to.be.a('string');",
									"        pm.expect(element.name).to.exist.and.to.be.a('string');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"The id must be a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('array');",
									"  ",
									"  responseData.forEach(function (item) {",
									"    pm.expect(item.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Name is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"    responseData.forEach(function (amenity) {",
									"        pm.expect(amenity.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
									"    });",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cd8e5c42-c4db-4c85-9aff-84eb6709a0f3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/amenities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"amenities"
							]
						}
					},
					"response": [
						{
							"id": "a1f57741-ba53-4c79-9003-0d2f0e6b1bad",
							"name": "Successful retrieval of amenities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/amenities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"amenities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"l4567890-12gh-ijkl-1234-56789abcdef0\",\n    \"name\": \"Wifi\"\n  },\n  {\n    \"id\": \"l4567890-12gh-ijkl-1234-56789abcdef0\",\n    \"name\": \"Wifi\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new amenity",
					"id": "0ec9ce54-c76b-4fbc-b753-1c7afc002472",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Wifi\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/amenities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"amenities"
							]
						}
					},
					"response": [
						{
							"id": "0aa8ee6b-9d32-4ad9-975b-365bad223c66",
							"name": "Amenity created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Wifi\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/amenities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"amenities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "eb2c7de0-b85c-4df8-88b7-ff4b4b736ce5",
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Wifi\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/amenities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"amenities"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "1792275b-4bfb-482c-9be9-e03c2b2c4bce"
		},
		{
			"name": "bookings",
			"item": [
				{
					"name": "{bookingId}",
					"item": [
						{
							"name": "Get booking by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01f2b91c-5802-4ad4-8227-e737e40b818a",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Id should be a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"userId is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.userId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"userId should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"propertyId should be a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.propertyId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "766a8ef2-8e58-4000-afad-f020e647c0af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bookings/:bookingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "5e029270-b3be-4b71-9282-c141f8b2f01a",
									"name": "Successful retrieval of booking",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bookings/:bookingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bookings",
												":bookingId"
											],
											"variable": [
												{
													"key": "bookingId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"f0123456-78ab-cdef-0123-456789abcdef\",\n  \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"propertyId\": \"z9876543-21fe-dcba-1098-76543210dcba\",\n  \"checkinDate\": \"2023-03-10T18:00:00.000Z\",\n  \"checkoutDate\": \"2023-03-15T10:00:00.000Z\",\n  \"numberOfGuests\": 2,\n  \"totalPrice\": 150.25,\n  \"bookingStatus\": \"confirmed\"\n}"
								},
								{
									"id": "0a149e52-fdde-46e9-95bc-ac4a5efa9d7e",
									"name": "Booking not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bookings/:bookingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bookings",
												":bookingId"
											],
											"variable": [
												{
													"key": "bookingId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update booking by ID",
							"id": "51318020-8306-4ff2-9cc1-fc0a3ab8209b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"checkinDate\": \"2023-03-11T18:00:00.000Z\",\n  \"checkoutDate\": \"2023-03-16T10:00:00.000Z\",\n  \"numberOfGuests\": 3,\n  \"totalPrice\": 200.75,\n  \"bookingStatus\": \"updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bookings/:bookingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "c7a106ce-7cd7-4e48-b50a-3b933edf6905",
									"name": "Booking updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"checkinDate\": \"2023-03-11T18:00:00.000Z\",\n  \"checkoutDate\": \"2023-03-16T10:00:00.000Z\",\n  \"numberOfGuests\": 3,\n  \"totalPrice\": 200.75,\n  \"bookingStatus\": \"updated\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bookings/:bookingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bookings",
												":bookingId"
											],
											"variable": [
												{
													"key": "bookingId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "0962a836-389d-4a9f-aaa7-40b91c0a4f9b",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"checkinDate\": \"2023-03-11T18:00:00.000Z\",\n  \"checkoutDate\": \"2023-03-16T10:00:00.000Z\",\n  \"numberOfGuests\": 3,\n  \"totalPrice\": 200.75,\n  \"bookingStatus\": \"updated\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bookings/:bookingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bookings",
												":bookingId"
											],
											"variable": [
												{
													"key": "bookingId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "02362b0c-46f7-4d59-9660-4e7db0a6a5b4",
									"name": "Booking not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"checkinDate\": \"2023-03-11T18:00:00.000Z\",\n  \"checkoutDate\": \"2023-03-16T10:00:00.000Z\",\n  \"numberOfGuests\": 3,\n  \"totalPrice\": 200.75,\n  \"bookingStatus\": \"updated\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bookings/:bookingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bookings",
												":bookingId"
											],
											"variable": [
												{
													"key": "bookingId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete booking by ID",
							"id": "95da96a3-787b-4001-8633-0096031eac58",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bookings/:bookingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "9e932c3d-727b-4dce-bcbb-e6847d16491f",
									"name": "Booking deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bookings/:bookingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bookings",
												":bookingId"
											],
											"variable": [
												{
													"key": "bookingId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "da3636a4-b35a-4981-8da5-9bbcba45ee67",
									"name": "Booking not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bookings/:bookingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bookings",
												":bookingId"
											],
											"variable": [
												{
													"key": "bookingId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "68178076-cf87-4e02-aef2-8a15b209a9c6"
				},
				{
					"name": "Get all bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04601b5e-a425-4c73-8d13-6db0a8e9e386",
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									"",
									"",
									"pm.test(\"Id should be a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array');",
									"    ",
									"    responseData.forEach(function (booking) {",
									"        pm.expect(booking.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"userId is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function (booking) {",
									"        pm.expect(booking.userId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"    });",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3f9b8ac4-2090-43e1-b9d4-b2f21220bca0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": [
						{
							"id": "06257d13-3a26-4449-882b-1f7655ddc48c",
							"name": "Successful retrieval of bookings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"f0123456-78ab-cdef-0123-456789abcdef\",\n    \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n    \"propertyId\": \"z9876543-21fe-dcba-1098-76543210dcba\",\n    \"checkinDate\": \"2023-03-10T18:00:00.000Z\",\n    \"checkoutDate\": \"2023-03-15T10:00:00.000Z\",\n    \"numberOfGuests\": 2,\n    \"totalPrice\": 150.25,\n    \"bookingStatus\": \"confirmed\"\n  },\n  {\n    \"id\": \"f0123456-78ab-cdef-0123-456789abcdef\",\n    \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n    \"propertyId\": \"z9876543-21fe-dcba-1098-76543210dcba\",\n    \"checkinDate\": \"2023-03-10T18:00:00.000Z\",\n    \"checkoutDate\": \"2023-03-15T10:00:00.000Z\",\n    \"numberOfGuests\": 2,\n    \"totalPrice\": 150.25,\n    \"bookingStatus\": \"confirmed\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new booking",
					"id": "d56635e3-7019-4be3-80b6-81a0b71cca92",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"propertyId\": \"z9876543-21fe-dcba-1098-76543210dcba\",\n  \"checkinDate\": \"2023-03-10T18:00:00.000Z\",\n  \"checkoutDate\": \"2023-03-15T10:00:00.000Z\",\n  \"numberOfGuests\": 2,\n  \"totalPrice\": 150.25,\n  \"bookingStatus\": \"confirmed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": [
						{
							"id": "4ee8c6ad-da67-465e-93bf-295f690972ec",
							"name": "Booking created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"propertyId\": \"z9876543-21fe-dcba-1098-76543210dcba\",\n  \"checkinDate\": \"2023-03-10T18:00:00.000Z\",\n  \"checkoutDate\": \"2023-03-15T10:00:00.000Z\",\n  \"numberOfGuests\": 2,\n  \"totalPrice\": 150.25,\n  \"bookingStatus\": \"confirmed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "48b82d7c-3185-43b0-bafd-a6b126cf7644",
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"propertyId\": \"z9876543-21fe-dcba-1098-76543210dcba\",\n  \"checkinDate\": \"2023-03-10T18:00:00.000Z\",\n  \"checkoutDate\": \"2023-03-15T10:00:00.000Z\",\n  \"numberOfGuests\": 2,\n  \"totalPrice\": 150.25,\n  \"bookingStatus\": \"confirmed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "41b1ec7e-0d62-4508-92bd-669a96f2fc29"
		},
		{
			"name": "reviews",
			"item": [
				{
					"name": "{reviewId}",
					"item": [
						{
							"name": "Get review by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d5cfccf-5df7-4c6e-bae2-c9854c50b975",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.id).to.exist.and.to.be.a('string');",
											"    pm.expect(responseData.userId).to.exist.and.to.be.a('string');",
											"    pm.expect(responseData.propertyId).to.exist.and.to.be.a('string');",
											"    pm.expect(responseData.rating).to.exist.and.to.be.a('number');",
											"    pm.expect(responseData.comment).to.exist.and.to.be.a('string');",
											"});",
											"",
											"",
											"pm.test(\"Id is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"userId is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.userId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"propertyId is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.propertyId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2e9b6853-6592-479f-800b-9725b745f260",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reviews/:reviewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews",
										":reviewId"
									],
									"variable": [
										{
											"key": "reviewId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "11cab5bc-4da7-40ec-8ec1-169113d25cfd",
									"name": "Successful retrieval of review",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reviews/:reviewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reviews",
												":reviewId"
											],
											"variable": [
												{
													"key": "reviewId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"g7890123-45cd-ef01-2345-6789abcdef01\",\n  \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"propertyId\": \"z0123456-78ab-cdef-9012-3456789abcdef\",\n  \"rating\": 5,\n  \"comment\": \"The property was amazing, and the host was very accommodating!\"\n}"
								},
								{
									"id": "12c0d436-1533-49e4-b858-7e1970047b71",
									"name": "Review not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/reviews/:reviewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reviews",
												":reviewId"
											],
											"variable": [
												{
													"key": "reviewId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update review by ID",
							"id": "89933c8a-c78e-4d45-bf10-b554a0d0ebff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 4,\n  \"comment\": \"Updated review for the property.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reviews/:reviewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews",
										":reviewId"
									],
									"variable": [
										{
											"key": "reviewId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "e63b501c-d075-430d-872b-03b9155c9545",
									"name": "Review updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rating\": 4,\n  \"comment\": \"Updated review for the property.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reviews/:reviewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reviews",
												":reviewId"
											],
											"variable": [
												{
													"key": "reviewId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "95f23daa-533d-4542-ab79-b5094fdb1b11",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rating\": 4,\n  \"comment\": \"Updated review for the property.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reviews/:reviewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reviews",
												":reviewId"
											],
											"variable": [
												{
													"key": "reviewId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "59580eb9-aa56-49e4-9929-ba2f28721535",
									"name": "Review not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rating\": 4,\n  \"comment\": \"Updated review for the property.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reviews/:reviewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reviews",
												":reviewId"
											],
											"variable": [
												{
													"key": "reviewId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete review by ID",
							"id": "85b88269-6006-4cea-b43c-cfb6a9a2f191",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reviews/:reviewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews",
										":reviewId"
									],
									"variable": [
										{
											"key": "reviewId",
											"value": "in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "4d2c4654-b5ad-4d48-b082-d1621c189e3e",
									"name": "Review deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/reviews/:reviewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reviews",
												":reviewId"
											],
											"variable": [
												{
													"key": "reviewId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "6718d80e-632d-43ca-9a32-8e7939d6b50e",
									"name": "Review not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/reviews/:reviewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reviews",
												":reviewId"
											],
											"variable": [
												{
													"key": "reviewId",
													"value": "in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "9be64a33-5069-4b20-ac18-f5d444c4fa03"
				},
				{
					"name": "Get all reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abea5889-3599-4b2f-a001-656c20c8a5b3",
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response is an array with at least one element\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    pm.expect(responseData).to.have.lengthOf.at.least(1);",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('array');",
									"  responseData.forEach(function (review) {",
									"    pm.expect(review.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"userId is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"  ",
									"  responseData.forEach(function(review) {",
									"    pm.expect(review.userId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"userId should not be empty\");",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"propertyId is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    responseData.forEach(function (review) {",
									"        pm.expect(review.propertyId).to.be.a('string').and.to.have.lengthOf.at.least(1);",
									"    });",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1165e2f8-18a2-49b1-94f6-f6ca49411c77",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews"
							]
						}
					},
					"response": [
						{
							"id": "080d4660-22d5-446a-b663-1aa9fc250a1b",
							"name": "Successful retrieval of reviews",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"g7890123-45cd-ef01-2345-6789abcdef01\",\n    \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n    \"propertyId\": \"z0123456-78ab-cdef-9012-3456789abcdef\",\n    \"rating\": 5,\n    \"comment\": \"The property was amazing, and the host was very accommodating!\"\n  },\n  {\n    \"id\": \"g7890123-45cd-ef01-2345-6789abcdef01\",\n    \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n    \"propertyId\": \"z0123456-78ab-cdef-9012-3456789abcdef\",\n    \"rating\": 5,\n    \"comment\": \"The property was amazing, and the host was very accommodating!\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new review",
					"id": "f5af84e4-4310-4c28-82a7-1cf2ae6fff78",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"propertyId\": \"z0123456-78ab-cdef-9012-3456789abcdef\",\n  \"rating\": 5,\n  \"comment\": \"The property was amazing, and the host was very accommodating!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews"
							]
						}
					},
					"response": [
						{
							"id": "f1364ef1-6a72-4de6-9ff5-26ab66daebfe",
							"name": "Review created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"propertyId\": \"z0123456-78ab-cdef-9012-3456789abcdef\",\n  \"rating\": 5,\n  \"comment\": \"The property was amazing, and the host was very accommodating!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "844cf878-0f11-42b1-ae0b-bce56c9a0f78",
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"a1234567-89ab-cdef-0123-456789abcdef\",\n  \"propertyId\": \"z0123456-78ab-cdef-9012-3456789abcdef\",\n  \"rating\": 5,\n  \"comment\": \"The property was amazing, and the host was very accommodating!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "2f84b4ed-cde4-472c-9d3d-7553dbfd682c"
		},
		{
			"name": "User Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ddcfb83-92b2-42f1-843e-3884371b1da5",
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required field 'token'\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.token).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Token is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should not be empty\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ec3ecfa5-ad11-4364-847a-ff981d0eed5d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"johndoe\",\n  \"password\": \"mys3cur3p@ss\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": [
				{
					"id": "28f6940e-89f4-436f-ab78-639353969094",
					"name": "Successful login",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"johndoe\",\n  \"password\": \"mys3cur3p@ss\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"token\": \"mytoken\"\n}"
				},
				{
					"id": "4ad14eea-d1b6-41a7-bb68-4e2fb4074a99",
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"johndoe\",\n  \"password\": \"mys3cur3p@ss\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"id": "3759a584-4648-42d4-8d79-2f7374d5ba71",
			"key": "baseUrl",
			"value": "https://api.example.com/v1",
			"type": "string"
		}
	]
}